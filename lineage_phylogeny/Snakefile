"""
Pipeline to create lineage phylogenies from high-quality MAGs
Treating the MAGs as isolates
"""

configfile: "config.yaml"

rule all:
    input: f"{config['output_dir']}/MAG.final_tree.tre"


rule make_list_file:
    input:
        genomes_dir = f"{config['genomes']}",
        script = "scripts/fofn.py"
    output:
        output_file = f"{config['output_dir']}/fofn.txt"
    params:
        extension = ".fa"
    shell: 
        "python {input.script} {input.genomes_dir} {params.extension} {output.output_file}"


rule ska:
    input:
        ref_genome = f"{config['reference_genome']}",
        all_genomes = f"{config['output_dir']}/fofn.txt"
    output:
        f"{config['output_dir']}/ska_alignment.msa"
    conda:
        "gubbins3.3"
    threads: 4
    resources:
        mem_mb=5000
    shell:
        """
        generate_ska_alignment.py --reference {input.ref_genome} --fasta {input.all_genomes} --out {output} --threads \
        {threads}
        """


rule gubbins_iqtree:
    input:
        alignment_fasta = f"{config['output_dir']}/ska_alignment.msa",
        outputdir = f"{config['output_dir']}"
    output:
        final_tree = f"{config['output_dir']}/MAG.final_tree.tre"
    threads: 16
    resources:
        mem_mb=lambda wildcards, attempt: 16000 * attempt
    conda:
        "gubbins3.3"
    params:
        prefix = "MAG",
        bootstrap = 1000
    shell:
        """
        cd {input.outputdir}
        run_gubbins.py --threads {threads} --prefix {params.prefix} --tree-builder iqtree --bootstrap {params.bootstrap} \
          --first-model GTRGAMMA --best-model  {input.alignment_fasta}
        """


